{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1-0cRgo7FWwnJsWdbijwY04hNewBQ5Z2-","timestamp":1691999607038}]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"w7dUbyNVXcEf"},"source":["# 파이토치 RNN 분류 모델\n","- 코드 출처: https://tutorials.pytorch.kr/intermediate/char_rnn_classification_tutorial.html"]},{"cell_type":"code","metadata":{"id":"dB-d43kLYEAi","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692030462991,"user_tz":-540,"elapsed":368,"user":{"displayName":"이기환","userId":"15706483123137731910"}},"outputId":"61c7ff7e-9105-4a8a-a5b9-7955e7644f85"},"source":["!wget https://download.pytorch.org/tutorial/data.zip\n","!unzip data.zip\n","# 세계 각국의 이름이 있는 데이터셋 : 임의의 이름이 들어오면 어디 클래스에 들어가는지"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["--2023-08-14 16:27:40--  https://download.pytorch.org/tutorial/data.zip\n","Resolving download.pytorch.org (download.pytorch.org)... 13.249.85.72, 13.249.85.7, 13.249.85.22, ...\n","Connecting to download.pytorch.org (download.pytorch.org)|13.249.85.72|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 2882130 (2.7M) [application/zip]\n","Saving to: ‘data.zip’\n","\n","\rdata.zip              0%[                    ]       0  --.-KB/s               \rdata.zip            100%[===================>]   2.75M  --.-KB/s    in 0.08s   \n","\n","2023-08-14 16:27:40 (36.3 MB/s) - ‘data.zip’ saved [2882130/2882130]\n","\n","Archive:  data.zip\n","   creating: data/\n","  inflating: data/eng-fra.txt        \n","   creating: data/names/\n","  inflating: data/names/Arabic.txt   \n","  inflating: data/names/Chinese.txt  \n","  inflating: data/names/Czech.txt    \n","  inflating: data/names/Dutch.txt    \n","  inflating: data/names/English.txt  \n","  inflating: data/names/French.txt   \n","  inflating: data/names/German.txt   \n","  inflating: data/names/Greek.txt    \n","  inflating: data/names/Irish.txt    \n","  inflating: data/names/Italian.txt  \n","  inflating: data/names/Japanese.txt  \n","  inflating: data/names/Korean.txt   \n","  inflating: data/names/Polish.txt   \n","  inflating: data/names/Portuguese.txt  \n","  inflating: data/names/Russian.txt  \n","  inflating: data/names/Scottish.txt  \n","  inflating: data/names/Spanish.txt  \n","  inflating: data/names/Vietnamese.txt  \n"]}]},{"cell_type":"markdown","metadata":{"id":"Vukqoa09LSZw"},"source":["이름: Ślusàrski"]},{"cell_type":"code","metadata":{"id":"2d1pQ-JeYKzw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692030462994,"user_tz":-540,"elapsed":30,"user":{"displayName":"이기환","userId":"15706483123137731910"}},"outputId":"e297567d-83fa-4a94-93af-0de0a1b33500"},"source":["from io import open\n","import glob\n","import os\n","\n","def findFiles(path):\n","  return glob.glob(path)\n","\n","print(findFiles('data/names/*.txt'))\n","\n","import unicodedata\n","import string\n","\n","all_letters = string.ascii_letters + \".,;'\"\n","n_letters = len(all_letters)\n","\n","def unicodeToAscii(s):\n","  return ''.join(\n","      c for c in unicodedata.normalize('NFD', s)\n","      if unicodedata.category(c) != 'Mn' and c in all_letters\n","  )\n","\n","print(unicodeToAscii('Ślusàrski'))\n","\n","category_lines = {}\n","all_categories = []\n","\n","def readLines(filename):\n","  lines = open(filename, encoding='utf-8').read().strip().split('\\n')\n","  return [unicodeToAscii(line) for line in lines]\n","\n","for filename in findFiles('data/names/*.txt'):\n","  category = os.path.splitext(os.path.basename(filename))[0]\n","  all_categories.append(category)\n","  lines = readLines(filename)\n","  category_lines[category] = lines\n","\n","n_categories = len(all_categories)"],"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["['data/names/Scottish.txt', 'data/names/Vietnamese.txt', 'data/names/Japanese.txt', 'data/names/Polish.txt', 'data/names/Czech.txt', 'data/names/Portuguese.txt', 'data/names/English.txt', 'data/names/French.txt', 'data/names/Chinese.txt', 'data/names/Russian.txt', 'data/names/Italian.txt', 'data/names/German.txt', 'data/names/Arabic.txt', 'data/names/Dutch.txt', 'data/names/Korean.txt', 'data/names/Irish.txt', 'data/names/Greek.txt', 'data/names/Spanish.txt']\n","Slusarski\n"]}]},{"cell_type":"code","metadata":{"id":"o39feEPmYRdv","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692030462995,"user_tz":-540,"elapsed":23,"user":{"displayName":"이기환","userId":"15706483123137731910"}},"outputId":"37c1e1d0-9455-40f0-c987-a41e11e42e31"},"source":["print(category_lines['Spanish'][:5])"],"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["['Abana', 'Abano', 'Abarca', 'Abaroa', 'Abascal']\n"]}]},{"cell_type":"code","metadata":{"id":"Mkjk05rwYUyx","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692030466646,"user_tz":-540,"elapsed":3664,"user":{"displayName":"이기환","userId":"15706483123137731910"}},"outputId":"6f477018-a79f-41b4-9de9-8e40eedb6842"},"source":["import torch\n","\n","def letterToIndex(letter):\n","  return all_letters.find(letter)\n","\n","def letterToTensor(letter):\n","  tensor = torch.zeros(1, n_letters)\n","  tensor[0][letterToIndex(letter)] = 1 # 한 단어('d')만 텐서 1로 [0,0,0,1,0]\n","  return tensor\n","\n","def lineToTensor(line): # 라인을 원핫 형태로\n","  tensor = torch.zeros(len(line), 1, n_letters)\n","  for li, letter in enumerate(line):\n","    tensor[li][0][letterToIndex(letter)] = 1\n","  return tensor\n","\n","print(letterToTensor('J'))\n","\n","print(lineToTensor('Jones').size())\n","\n","print(lineToTensor('Jones'))"],"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1.,\n","         0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","         0., 0.]])\n","torch.Size([5, 1, 56])\n","tensor([[[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","          0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","          0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","          0., 0., 0., 0., 0.]],\n","\n","        [[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0.,\n","          0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","          0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","          0., 0., 0., 0., 0.]],\n","\n","        [[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0.,\n","          0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","          0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","          0., 0., 0., 0., 0.]],\n","\n","        [[0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","          0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","          0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","          0., 0., 0., 0., 0.]],\n","\n","        [[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","          0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","          0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","          0., 0., 0., 0., 0.]]])\n"]}]},{"cell_type":"markdown","metadata":{"id":"IPVvWrMHYelv"},"source":["## 신경망 생성\n","\n","- 모델 생성 방법 참고 : https://pytorch.org/tutorials/beginner/former_torchies/nnft_tutorial.html"]},{"cell_type":"code","metadata":{"id":"t6gKYokQYYZW","executionInfo":{"status":"ok","timestamp":1692030466647,"user_tz":-540,"elapsed":10,"user":{"displayName":"이기환","userId":"15706483123137731910"}}},"source":["import torch.nn as nn\n","\n","class RNN(nn.Module):\n","  def __init__(self, input_size, hidden_size, output_size):\n","    super(RNN, self).__init__()\n","\n","    self.hidden_size = hidden_size\n","\n","    self.i2h = nn.Linear(input_size + hidden_size, hidden_size)\n","    self.i2o = nn.Linear(input_size + hidden_size, output_size)\n","    self.softmax = nn.LogSoftmax(dim=1)\n","\n","  def forward(self, input, hidden):\n","    combined = torch.cat((input, hidden), 1)\n","    hidden = self.i2h(combined)\n","    output = self.i2o(combined)\n","    output = self.softmax(output)\n","    return output, hidden\n","\n","  def initHidden(self):\n","    return torch.zeros(1, self.hidden_size)\n","\n","n_hidden = 128\n","rnn = RNN(n_letters, n_hidden, n_categories)"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"id":"wuFpzGrHYgBY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692030467442,"user_tz":-540,"elapsed":802,"user":{"displayName":"이기환","userId":"15706483123137731910"}},"outputId":"a6ee5c11-8989-425f-edb9-632fdb9a99d2"},"source":["input = letterToTensor('A')\n","hidden = torch.zeros(1, n_hidden)\n","\n","output, next_hidden = rnn(input, hidden)\n","\n","print(output)"],"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["tensor([[-2.8370, -2.9048, -2.7930, -2.9727, -2.9330, -2.9368, -2.9139, -2.8015,\n","         -2.9658, -2.8828, -2.8706, -2.7783, -2.9168, -2.8949, -2.9785, -2.9011,\n","         -2.9388, -2.8386]], grad_fn=<LogSoftmaxBackward0>)\n"]}]},{"cell_type":"code","metadata":{"id":"wpGGzL2NYku2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692030467458,"user_tz":-540,"elapsed":85,"user":{"displayName":"이기환","userId":"15706483123137731910"}},"outputId":"b484642e-1279-4bb0-c12c-9cb65337853a"},"source":["input = lineToTensor('Albert')\n","hidden = torch.zeros(1, n_hidden)\n","\n","output, next_hidden = rnn(input[0], hidden)\n","\n","print(output) # 위와 같은 결과값을 보인다."],"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["tensor([[-2.8370, -2.9048, -2.7930, -2.9727, -2.9330, -2.9368, -2.9139, -2.8015,\n","         -2.9658, -2.8828, -2.8706, -2.7783, -2.9168, -2.8949, -2.9785, -2.9011,\n","         -2.9388, -2.8386]], grad_fn=<LogSoftmaxBackward0>)\n"]}]},{"cell_type":"markdown","metadata":{"id":"q3qAoF6BYrPW"},"source":["## 모델 학습\n","- 준비"]},{"cell_type":"code","metadata":{"id":"WNTCbv4aYoP2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692030467469,"user_tz":-540,"elapsed":86,"user":{"displayName":"이기환","userId":"15706483123137731910"}},"outputId":"e6228f21-f573-4df5-d633-e28cfb056637"},"source":["def categoryFromOutput(output):\n","  top_n, top_i = output.topk(1)\n","  category_i = top_i[0].item()\n","  return all_categories[category_i], category_i\n","\n","print(categoryFromOutput(output))"],"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["('German', 11)\n"]}]},{"cell_type":"code","metadata":{"id":"aanvL45oYs00","executionInfo":{"status":"ok","timestamp":1692030467470,"user_tz":-540,"elapsed":80,"user":{"displayName":"이기환","userId":"15706483123137731910"}}},"source":["import random\n","\n","def randomChoice(l):\n","  return l[random.randint(0, len(l) - 1)]\n","\n","def randomTrainingExample():\n","  category = randomChoice(all_categories)\n","  line = randomChoice(category_lines[category])\n","  category_tensor = torch.tensor([all_categories.index(category)], dtype=torch.long)\n","  line_tensor = lineToTensor(line)\n","  return category, line, category_tensor, line_tensor\n","\n"],"execution_count":9,"outputs":[]},{"cell_type":"code","source":["for i in range(10):\n","  category, line, category_tensor, line_tensor = randomTrainingExample()\n","  print('category:{}  \\tline: {}'.format(category, line))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y45yJvSj2jbN","executionInfo":{"status":"ok","timestamp":1692030467472,"user_tz":-540,"elapsed":79,"user":{"displayName":"이기환","userId":"15706483123137731910"}},"outputId":"ab79b149-8071-404f-d370-f4e809a2f230"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["category:Irish  \tline: Macshuibhne\n","category:Spanish  \tline: Fuentes\n","category:Portuguese  \tline: Santiago\n","category:Chinese  \tline: Hou\n","category:Polish  \tline: Majewski\n","category:Japanese  \tline: Shiratori\n","category:Scottish  \tline: Docherty\n","category:French  \tline: Lefurgey\n","category:Portuguese  \tline: Belo\n","category:Italian  \tline: Nespola\n"]}]},{"cell_type":"markdown","metadata":{"id":"qVA-IZP3Yzz2"},"source":["## 손실함수"]},{"cell_type":"code","metadata":{"id":"Y98Uy0YPYwjY","executionInfo":{"status":"ok","timestamp":1692030467476,"user_tz":-540,"elapsed":72,"user":{"displayName":"이기환","userId":"15706483123137731910"}}},"source":["criterion = nn.NLLLoss()"],"execution_count":11,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"oDyQIe8lY_Vl"},"source":["## 모델 학습"]},{"cell_type":"code","metadata":{"id":"4vIcTqP8Y9lo","executionInfo":{"status":"ok","timestamp":1692030467479,"user_tz":-540,"elapsed":73,"user":{"displayName":"이기환","userId":"15706483123137731910"}}},"source":["learning_rate = 0.005\n","\n","def train(category_tensor, line_tensor):\n","  hidden = rnn.initHidden()\n","\n","  rnn.zero_grad()\n","\n","  for i in range(line_tensor.size()[0]):\n","    output, hidden = rnn(line_tensor[i], hidden)\n","\n","  loss = criterion(output, category_tensor)\n","  loss.backward()\n","\n","  for p in rnn.parameters():\n","    p.data.add_(p.grad.data, alpha=-learning_rate)\n","\n","  return output, loss.item()"],"execution_count":12,"outputs":[]},{"cell_type":"code","metadata":{"id":"DRDcSbrsZAK9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692030562221,"user_tz":-540,"elapsed":76266,"user":{"displayName":"이기환","userId":"15706483123137731910"}},"outputId":"69c4559d-87e5-41a3-e29b-3c316103c8d3"},"source":["import time\n","import math\n","\n","n_iters = 100000\n","print_every = 5000\n","plot_every = 1000\n","\n","current_loss = 0\n","all_losses = []\n","\n","def timeSince(since):\n","  now = time.time()\n","  s = now - since\n","  m = math.floor(s/60)\n","  s -= m*60\n","  return '%dm %ds' % (m, s)\n","\n","start = time.time()\n","\n","for iter in range(1, n_iters+1):\n","  category, line, category_tensor, line_tensor = randomTrainingExample()\n","  output, loss = train(category_tensor, line_tensor)\n","  current_loss += loss\n","\n","  if iter % print_every == 0:\n","    guess, guess_i = categoryFromOutput(output)\n","    correct = '0' if guess == category else 'X (%s)' % category\n","    print('%d %d%% (%s) %.4f %s / %s %s' % (iter, iter/n_iters*100, timeSince(start), loss, line, guess, correct))\n","\n","  if iter % plot_every==0:\n","    all_losses.append(current_loss / plot_every)\n","    current_loss = 0"],"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["5000 5% (0m 3s) 2.0554 Oliver / German 0\n","10000 10% (0m 7s) 2.6187 Espina / Japanese X (Spanish)\n","15000 15% (0m 11s) 2.5692 Fakhoury / Japanese X (Arabic)\n","20000 20% (0m 15s) 3.8699 Serafin / French X (Polish)\n","25000 25% (0m 18s) 1.9436 Bolton / Scottish X (English)\n","30000 30% (0m 22s) 1.9639 Fisik / Czech X (Russian)\n","35000 35% (0m 26s) 1.3272 Luc / Chinese X (Vietnamese)\n","40000 40% (0m 30s) 2.4461 Bellerose / Italian X (French)\n","45000 45% (0m 34s) 3.6234 Cerv / Dutch X (Czech)\n","50000 50% (0m 37s) 0.3838 Yeon / Korean 0\n","55000 55% (0m 41s) 0.0624 Mantovani / Italian 0\n","60000 60% (0m 45s) 1.1229 Phung / Vietnamese 0\n","65000 65% (0m 49s) 1.0139 Suh / Chinese X (Korean)\n","70000 70% (0m 53s) 3.1142 Zogby / English X (Arabic)\n","75000 75% (0m 56s) 0.4789 Youn / Korean 0\n","80000 80% (1m 0s) 1.9061 Cen / Korean X (Chinese)\n","85000 85% (1m 4s) 1.4967 Chu / Vietnamese X (Korean)\n","90000 90% (1m 8s) 0.0479 Walentowicz / Polish 0\n","95000 95% (1m 11s) 2.7983 Sakellariou / Russian X (Greek)\n","100000 100% (1m 15s) 0.5312 Dasios / Greek 0\n"]}]},{"cell_type":"code","metadata":{"id":"cSwAjR6QZDRf","colab":{"base_uri":"https://localhost:8080/","height":482},"executionInfo":{"status":"ok","timestamp":1692030590430,"user_tz":-540,"elapsed":425,"user":{"displayName":"이기환","userId":"15706483123137731910"}},"outputId":"ad5d722a-63db-450e-ef5a-597ccadb9f7b"},"source":["import matplotlib.ticker as ticker\n","import matplotlib.pyplot as plt\n","plt.style.use('seaborn-white')\n","\n","plt.figure()\n","plt.plot(all_losses)\n","plt.show()"],"execution_count":16,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-16-f46ada5b35a0>:3: MatplotlibDeprecationWarning: The seaborn styles shipped by Matplotlib are deprecated since 3.6, as they no longer correspond to the styles shipped by seaborn. However, they will remain available as 'seaborn-v0_8-<style>'. Alternatively, directly use the seaborn API instead.\n","  plt.style.use('seaborn-white')\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"J0_2HyE3ZPZk"},"source":["## 모델 테스트"]},{"cell_type":"code","metadata":{"id":"MBVWJNmoZO8a","colab":{"base_uri":"https://localhost:8080/","height":566},"executionInfo":{"status":"ok","timestamp":1692031134315,"user_tz":-540,"elapsed":4854,"user":{"displayName":"이기환","userId":"15706483123137731910"}},"outputId":"2fa3eb06-331a-48f8-d0ae-ac765ff09012"},"source":["confusion = torch.zeros(n_categories, n_categories)\n","n_confusion = 10000\n","\n","def evaluate(line_tensor):\n","  hidden = rnn.initHidden()\n","\n","  for i in range(line_tensor.size()[0]):\n","    output, hidden = rnn(line_tensor[i], hidden)\n","\n","  return output\n","\n","for i in range(n_confusion):\n","  category, line, category_tensor, line_tensor = randomTrainingExample()\n","  output = evaluate(line_tensor)\n","  guess, guess_i = categoryFromOutput(output)\n","  category_i = all_categories.index(category)\n","  confusion[category_i][guess_i] += 1\n","\n","for i in range(n_categories):\n","  confusion[i] = confusion[i] / confusion[i].sum()\n","\n","fig = plt.figure()\n","ax = fig.add_subplot(111)\n","cax = ax.matshow(confusion.numpy())\n","fig.colorbar(cax)\n","ax.set_xticklabels([''] + all_categories, rotation=90)\n","ax.set_yticklabels([''] + all_categories)\n","ax.xaxis.set_major_locator(ticker.MultipleLocator(1))\n","ax.yaxis.set_major_locator(ticker.MultipleLocator(1))\n","\n","plt.show()"],"execution_count":20,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-20-855b61066779>:26: UserWarning: FixedFormatter should only be used together with FixedLocator\n","  ax.set_xticklabels([''] + all_categories, rotation=90)\n","<ipython-input-20-855b61066779>:27: UserWarning: FixedFormatter should only be used together with FixedLocator\n","  ax.set_yticklabels([''] + all_categories)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"AfjRYlioZV3o"},"source":["## 사용자 입력으로부터의 실행"]},{"cell_type":"code","metadata":{"id":"uteG1Je5ZQWg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692031438155,"user_tz":-540,"elapsed":322,"user":{"displayName":"이기환","userId":"15706483123137731910"}},"outputId":"7bac3d97-113c-4458-f8a7-93a4485c235a"},"source":["def predict(input_line, n_predictions=3):\n","  print('\\n> %s' % input_line)\n","  with torch.no_grad():\n","    output = evaluate(lineToTensor(input_line))\n","\n","    topv, topi = output.topk(n_predictions, 1, True)\n","    predictions = []\n","\n","    for i in range(n_predictions):\n","      value = topv[0][i].item()\n","      category_index = topi[0][i].item()\n","      print('(%.2f) %s' % (value, all_categories[category_index]))\n","      predictions.append([value, all_categories[category_index]])\n","\n","predict('Jackson')\n","predict('Bill')\n","predict('Lee Ki Hwan')\n","predict('Dovesky')"],"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","> Jackson\n","(-0.23) Scottish\n","(-2.64) English\n","(-2.93) Czech\n","\n","> Bill\n","(-1.46) English\n","(-1.57) Irish\n","(-1.87) German\n","\n","> Lee Ki Hwan\n","(-0.36) Korean\n","(-1.77) Chinese\n","(-2.15) Irish\n","\n","> Dovesky\n","(-0.68) Russian\n","(-0.89) Czech\n","(-2.90) English\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"SM6Lwhtv7cYm"},"execution_count":null,"outputs":[]}]}